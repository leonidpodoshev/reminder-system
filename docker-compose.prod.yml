version: '3.8'

services:
  # ===================================
  # PostgreSQL Database
  # ===================================
  postgres:
    image: postgres:15-alpine
    container_name: memo-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-reminder}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-reminder}
      POSTGRES_DB: ${POSTGRES_DB:-reminder_db}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-reminder}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - memo-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===================================
  # RabbitMQ Message Broker
  # ===================================
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: memo-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-/}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
      - ./config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./config/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - memo-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===================================
  # Redis Cache
  # ===================================
  redis:
    image: redis:7-alpine
    container_name: memo-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redispass}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - memo-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # ===================================
  # User Service
  # ===================================
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
      args:
        GO_VERSION: 1.21
    container_name: memo-user-service
    environment:
      PORT: 8084
      DATABASE_URL: "host=postgres user=${POSTGRES_USER:-reminder} password=${POSTGRES_PASSWORD:-reminder} dbname=${POSTGRES_DB:-reminder_db} port=5432 sslmode=disable"
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-24h}
      REDIS_URL: "redis://:${REDIS_PASSWORD:-redispass}@redis:6379/0"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - memo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===================================
  # Reminder Service
  # ===================================
  reminder-service:
    build:
      context: ./reminder-service
      dockerfile: Dockerfile
      args:
        GO_VERSION: 1.21
    container_name: memo-reminder-service
    environment:
      PORT: 8081
      DATABASE_URL: "host=postgres user=${POSTGRES_USER:-reminder} password=${POSTGRES_PASSWORD:-reminder} dbname=${POSTGRES_DB:-reminder_db} port=5432 sslmode=disable"
      RABBITMQ_URL: "amqp://${RABBITMQ_USER:-guest}:${RABBITMQ_PASSWORD:-guest}@rabbitmq:5672/${RABBITMQ_VHOST:-/}"
      REDIS_URL: "redis://:${REDIS_PASSWORD:-redispass}@redis:6379/0"
      USER_SERVICE_URL: "http://user-service:8084"
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      user-service:
        condition: service_started
    networks:
      - memo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===================================
  # Notification Service
  # ===================================
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
      args:
        GO_VERSION: 1.21
    container_name: memo-notification-service
    environment:
      PORT: 8082
      RABBITMQ_URL: "amqp://${RABBITMQ_USER:-guest}:${RABBITMQ_PASSWORD:-guest}@rabbitmq:5672/${RABBITMQ_VHOST:-/}"
      
      # Email Configuration
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM: ${SMTP_FROM:-noreply@memo.local}
      SMTP_TLS: ${SMTP_TLS:-true}
      
      # SMS Configuration (Twilio)
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_FROM_PHONE: ${TWILIO_FROM_PHONE}
      
      # Notification Settings
      MAX_RETRIES: ${NOTIFICATION_MAX_RETRIES:-3}
      RETRY_DELAY: ${NOTIFICATION_RETRY_DELAY:-5s}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - memo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===================================
  # Scheduler Service
  # ===================================
  scheduler-service:
    build:
      context: ./scheduler-service
      dockerfile: Dockerfile
      args:
        GO_VERSION: 1.21
    container_name: memo-scheduler-service
    environment:
      PORT: 8083
      REMINDER_SERVICE_URL: "http://reminder-service:8081"
      RABBITMQ_URL: "amqp://${RABBITMQ_USER:-guest}:${RABBITMQ_PASSWORD:-guest}@rabbitmq:5672/${RABBITMQ_VHOST:-/}"
      
      # Scheduler Configuration
      CHECK_INTERVAL: ${SCHEDULER_CHECK_INTERVAL:-1m}
      LOOKAHEAD_WINDOW: ${SCHEDULER_LOOKAHEAD_WINDOW:-5m}
      BATCH_SIZE: ${SCHEDULER_BATCH_SIZE:-100}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      reminder-service:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - memo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===================================
  # API Gateway (Nginx) - Port 8080
  # ===================================
  api-gateway:
    image: nginx:1.25-alpine
    container_name: memo-api-gateway
    ports:
      - "8080:80"  # Using 8080 to avoid conflicts
    volumes:
      - ./api-gateway/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./api-gateway/conf.d:/etc/nginx/conf.d:ro
      - api_gateway_logs:/var/log/nginx
    depends_on:
      - user-service
      - reminder-service
      - notification-service
      - scheduler-service
    networks:
      - memo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===================================
  # Frontend (React Application)
  # ===================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NODE_VERSION: 18
        REACT_APP_API_URL: http://memo  # Changed for production
    container_name: memo-frontend
    environment:
      REACT_APP_API_URL: http://memo
      REACT_APP_VERSION: ${APP_VERSION:-1.0.0}
    ports:
      - "3000:80"  # Keep frontend on 3000 for now, can be integrated later
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api-gateway
    networks:
      - memo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# ===================================
# Networks
# ===================================
networks:
  memo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.29.0.0/16

# ===================================
# Volumes
# ===================================
volumes:
  postgres_data:
    external: true
    name: reminder-system_postgres_data
  rabbitmq_data:
    external: true  
    name: reminder-system_rabbitmq_data
  rabbitmq_logs:
    external: true
    name: reminder-system_rabbitmq_logs
  redis_data:
    external: true
    name: reminder-system_redis_data
  api_gateway_logs:
    driver: local